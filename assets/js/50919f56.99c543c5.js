(self.webpackChunk_xrengine_docs=self.webpackChunk_xrengine_docs||[]).push([[11148],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return d},kt:function(){return k}});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function p(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function m(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},p=Object.keys(t);for(a=0;a<p.length;a++)n=p[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(t);for(a=0;a<p.length;a++)n=p[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),l=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=l(t.components);return a.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,p=t.originalType,o=t.parentName,d=m(t,["components","mdxType","originalType","parentName"]),s=l(n),k=r,c=s["".concat(o,".").concat(k)]||s[k]||u[k]||p;return n?a.createElement(c,i(i({ref:e},d),{},{components:n})):a.createElement(c,i({ref:e},d))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var p=n.length,i=new Array(p);i[0]=s;var m={};for(var o in e)hasOwnProperty.call(e,o)&&(m[o]=e[o]);m.originalType=t,m.mdxType="string"==typeof t?t:r,i[1]=m;for(var l=2;l<p;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},42717:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return m},metadata:function(){return o},toc:function(){return l},default:function(){return u}});var a=n(22122),r=n(19756),p=(n(67294),n(3905)),i=["components"],m={id:"common_functions_mathlerpfunctions",title:"Module: common/functions/MathLerpFunctions",sidebar_label:"common/functions/MathLerpFunctions",custom_edit_url:null},o={unversionedId:"docs-engine/modules/common_functions_mathlerpfunctions",id:"docs-engine/modules/common_functions_mathlerpfunctions",isDocsHomePage:!1,title:"Module: common/functions/MathLerpFunctions",description:"Functions",source:"@site/docs/docs-engine/modules/common_functions_mathlerpfunctions.md",sourceDirName:"docs-engine/modules",slug:"/docs-engine/modules/common_functions_mathlerpfunctions",permalink:"/xrengine-docs/docs/docs-engine/modules/common_functions_mathlerpfunctions",editUrl:null,version:"current",sidebar_label:"common/functions/MathLerpFunctions",frontMatter:{id:"common_functions_mathlerpfunctions",title:"Module: common/functions/MathLerpFunctions",sidebar_label:"common/functions/MathLerpFunctions",custom_edit_url:null},sidebar:"sidebar",previous:{title:"Module: common/functions/EasingFunctions",permalink:"/xrengine-docs/docs/docs-engine/modules/common_functions_easingfunctions"},next:{title:"Module: common/functions/MathRandomFunctions",permalink:"/xrengine-docs/docs/docs-engine/modules/common_functions_mathrandomfunctions"}},l=[{value:"Functions",id:"functions",children:[{value:"clamp",id:"clamp",children:[]},{value:"degreeLerp",id:"degreelerp",children:[]},{value:"lerp",id:"lerp",children:[]},{value:"quatSlerp",id:"quatslerp",children:[]},{value:"radianLerp",id:"radianlerp",children:[]}]}],d={toc:l};function u(t){var e=t.components,n=(0,r.Z)(t,i);return(0,p.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h2",{id:"functions"},"Functions"),(0,p.kt)("h3",{id:"clamp"},"clamp"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("inlineCode",{parentName:"p"},"Const"),(0,p.kt)("strong",{parentName:"p"},"clamp"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"value"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"min"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"max"),": ",(0,p.kt)("em",{parentName:"p"},"number"),"): ",(0,p.kt)("em",{parentName:"p"},"number")),(0,p.kt)("p",null,"Returns values which will be clamped if goes out of minimum and maximum range."),(0,p.kt)("h4",{id:"parameters"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"value")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Value to be clamped.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"min")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Minimum boundary value.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"max")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Maximum boundary value.")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"number")),(0,p.kt)("p",null,"Clamped value."),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/0ed700334/packages/engine/src/common/functions/MathLerpFunctions.ts#L128"},"packages/engine/src/common/functions/MathLerpFunctions.ts:128")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"degreelerp"},"degreeLerp"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("inlineCode",{parentName:"p"},"Const"),(0,p.kt)("strong",{parentName:"p"},"degreeLerp"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"start"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"end"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"t"),": ",(0,p.kt)("em",{parentName:"p"},"number"),"): ",(0,p.kt)("em",{parentName:"p"},"number")),(0,p.kt)("p",null,"Find Interpolation between 2 degree angles."),(0,p.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"start")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Degree from which to interpolate.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"end")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Degree to which to interpolate.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"t")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"How far to interpolate from start.")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"number")),(0,p.kt)("p",null,"Interpolation between start and end."),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/0ed700334/packages/engine/src/common/functions/MathLerpFunctions.ts#L22"},"packages/engine/src/common/functions/MathLerpFunctions.ts:22")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"lerp"},"lerp"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("inlineCode",{parentName:"p"},"Const"),(0,p.kt)("strong",{parentName:"p"},"lerp"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"start"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"end"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"t"),": ",(0,p.kt)("em",{parentName:"p"},"number"),"): ",(0,p.kt)("em",{parentName:"p"},"number")),(0,p.kt)("p",null,"Find Interpolation between 2 number."),(0,p.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"start")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Number from which to interpolate.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"end")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Number to which to interpolate.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"t")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"How far to interpolate from start.")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"number")),(0,p.kt)("p",null,"Interpolation between start and end."),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/0ed700334/packages/engine/src/common/functions/MathLerpFunctions.ts#L11"},"packages/engine/src/common/functions/MathLerpFunctions.ts:11")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"quatslerp"},"quatSlerp"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("inlineCode",{parentName:"p"},"Const"),(0,p.kt)("strong",{parentName:"p"},"quatSlerp"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"qa"),": ",(0,p.kt)("a",{parentName:"p",href:"/xrengine-docs/docs/docs-engine/interfaces/networking_types_snapshotdatatypes.quat"},(0,p.kt)("em",{parentName:"a"},"Quat")),", ",(0,p.kt)("inlineCode",{parentName:"p"},"qb"),": ",(0,p.kt)("a",{parentName:"p",href:"/xrengine-docs/docs/docs-engine/interfaces/networking_types_snapshotdatatypes.quat"},(0,p.kt)("em",{parentName:"a"},"Quat")),", ",(0,p.kt)("inlineCode",{parentName:"p"},"t"),": ",(0,p.kt)("em",{parentName:"p"},"number"),"): ",(0,p.kt)("em",{parentName:"p"},"any")),(0,p.kt)("p",null,"Find Interpolation between 2 quaternion."),(0,p.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"qa")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/xrengine-docs/docs/docs-engine/interfaces/networking_types_snapshotdatatypes.quat"},(0,p.kt)("em",{parentName:"a"},"Quat"))),(0,p.kt)("td",{parentName:"tr",align:"left"},"-")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"qb")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/xrengine-docs/docs/docs-engine/interfaces/networking_types_snapshotdatatypes.quat"},(0,p.kt)("em",{parentName:"a"},"Quat"))),(0,p.kt)("td",{parentName:"tr",align:"left"},"-")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"t")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"How far to interpolate from start.")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"any")),(0,p.kt)("p",null,"Interpolation between start and end."),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/0ed700334/packages/engine/src/common/functions/MathLerpFunctions.ts#L86"},"packages/engine/src/common/functions/MathLerpFunctions.ts:86")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"radianlerp"},"radianLerp"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("inlineCode",{parentName:"p"},"Const"),(0,p.kt)("strong",{parentName:"p"},"radianLerp"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"start"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"end"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"t"),": ",(0,p.kt)("em",{parentName:"p"},"number"),"): ",(0,p.kt)("em",{parentName:"p"},"number")),(0,p.kt)("p",null,"Find Interpolation between 2 radian angles."),(0,p.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"start")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Radian from which to interpolate.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"end")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Radian to which to interpolate.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"t")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number")),(0,p.kt)("td",{parentName:"tr",align:"left"},"How far to interpolate from start.")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"number")),(0,p.kt)("p",null,"Interpolation between start and end."),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/0ed700334/packages/engine/src/common/functions/MathLerpFunctions.ts#L54"},"packages/engine/src/common/functions/MathLerpFunctions.ts:54")))}u.isMDXComponent=!0}}]);