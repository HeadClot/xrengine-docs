(self.webpackChunk_xrengine_docs=self.webpackChunk_xrengine_docs||[]).push([[49774],{3905:function(e,n,o){"use strict";o.d(n,{Zo:function(){return a},kt:function(){return m}});var t=o(67294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function s(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function i(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?s(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function l(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)o=s[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)o=s[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=t.createContext({}),u=function(e){var n=t.useContext(c),o=n;return e&&(o="function"==typeof e?e(n):i(i({},n),e)),o},a=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,a=l(e,["components","mdxType","originalType","parentName"]),d=u(o),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||s;return o?t.createElement(f,i(i({ref:n},a),{},{components:o})):t.createElement(f,i({ref:n},a))}));function m(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=o.length,i=new Array(s);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<s;u++)i[u]=o[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,o)}d.displayName="MDXCreateElement"},93925:function(e,n,o){"use strict";o.r(n),o.d(n,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c},default:function(){return a}});var t=o(22122),r=o(19756),s=(o(67294),o(3905)),i={id:"physics_enums_collisiongroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",custom_edit_url:null},l={unversionedId:"docs-engine/modules/physics_enums_collisiongroups",id:"docs-engine/modules/physics_enums_collisiongroups",isDocsHomePage:!1,title:"Module: physics/enums/CollisionGroups",description:"Table of contents",source:"@site/docs/docs-engine/modules/physics_enums_collisiongroups.md",sourceDirName:"docs-engine/modules",slug:"/docs-engine/modules/physics_enums_collisiongroups",permalink:"/xrengine-docs/docs/docs-engine/modules/physics_enums_collisiongroups",editUrl:null,version:"current",sidebar_label:"physics/enums/CollisionGroups",frontMatter:{id:"physics_enums_collisiongroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",custom_edit_url:null},sidebar:"sidebar",previous:{title:"Module: physics/components/UserControllerObjectComponent",permalink:"/xrengine-docs/docs/docs-engine/modules/physics_components_usercontrollerobjectcomponent"},next:{title:"Module: physics/enums/PhysicsStates",permalink:"/xrengine-docs/docs/docs-engine/modules/physics_enums_physicsstates"}},c=[{value:"Table of contents",id:"table-of-contents",children:[{value:"Enumerations",id:"enumerations",children:[]}]},{value:"Variables",id:"variables",children:[{value:"DefaultCollisionMask",id:"defaultcollisionmask",children:[]}]}],u={toc:c};function a(e){var n=e.components,o=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,t.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,s.kt)("h3",{id:"enumerations"},"Enumerations"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/xrengine-docs/docs/docs-engine/enums/physics_enums_collisiongroups.collisiongroups"},"CollisionGroups"))),(0,s.kt)("h2",{id:"variables"},"Variables"),(0,s.kt)("h3",{id:"defaultcollisionmask"},"DefaultCollisionMask"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,s.kt)("strong",{parentName:"p"},"DefaultCollisionMask"),": ",(0,s.kt)("em",{parentName:"p"},"number")),(0,s.kt)("p",null,"Defined in: ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/6b6bce1fb/packages/engine/src/physics/enums/CollisionGroups.ts#L16"},"packages/engine/src/physics/enums/CollisionGroups.ts:16")))}a.isMDXComponent=!0}}]);